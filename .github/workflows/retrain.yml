name: Scheduled Model Retraining

on:
  workflow_dispatch: # Allows manual triggering
  schedule:
    # Runs at 00:00 on the 1st day of January, April, July, October
    # You can adjust the cron schedule as needed.
    # See: https://crontab.guru/
    - cron: '0 0 1 */3 *'

jobs:
  retrain:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10' # Match Dockerfile/dev environment

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Might need specific versions locked down for more reproducibility

    - name: Run Preprocessing
      run: python scripts/02_preprocessing.py
      # Note: This currently uses the static data.csv. 
      # In a real-world scenario, this step might first pull fresh data.

    - name: Run Hyperparameter Tuning and Final Model Training
      # env: # Optional env vars for remote MLflow
        # MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
        # MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
        # MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
      run: python scripts/05_hyperparameter_tuning.py
      # This script saves the final model and logs to MLflow

    # Optional: Add steps here to commit the updated model/preprocessor
    # back to the repository if desired, or trigger a deployment.
    # This requires careful handling of permissions and commit logic.
    # - name: Commit updated model
    #   run: |
    #     git config --global user.name 'github-actions[bot]'
    #     git config --global user.email 'github-actions[bot]@users.noreply.github.com'
    #     git add models/preprocessor.joblib models/final_churn_model.joblib data/processed_data.npz data/processed_feature_names.txt
    #     # Check if there are changes to commit
    #     if git diff --staged --quiet; then
    #       echo "No model changes to commit."
    #     else
    #       git commit -m "Auto-retrain: Update model artifacts"
    #       git push
    #     fi 